#include <physical_layouts.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define DFb 0
#define JIS 1
#define BT 4
#define MOUSE 6
#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角
#define JP_BSLH  INT1         // (backslash)

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "NEW_MACRO";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mo2: mo2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&kp AT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo6: mo6 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N6>, <&kp CARET>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo7: mo7 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N7>, <&kp AMPS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo8: mo8 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N8>, <&kp ASTRK>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo9: mo9 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N9>, <&kp LPAR>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mo0: mo0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp N0>, <&kp LS(N9)>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moA: moA {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp UNDERSCORE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moB: moB {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp PLUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moC: moC {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp INT3>, <&kp JP_PIPE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moD: moD {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LBKT>, <&kp LBRC>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moE: moE {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp RBKT>, <&kp RBRC>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moF: moF {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SEMI>, <&kp KP_PLUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moG: moG {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp APOSTROPHE>, <&kp DQT>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moH: moH {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSLASH>, <&kp TILDE2>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        moI: moI {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp JP_BSLH>, <&kp JP_UNDERSCORE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W         &kp E         &kp R      &kp T                                       &kp Y          &kp U      &kp I        &kp O         &kp P
&kp A           &kp S         &kp D         &kp F      &kp G        &kp LS(LG(S))      &kp MINUS   &kp H          &kp J      &kp K        &kp L         &kp MINUS
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C      &kp V        &kp B              &kp DELETE  &kp N          &kp M      &lt 4 COMMA  &lt 5 PERIOD  &mkp MB1
&kp LCTRL       &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 TAB  &lt 2 SPACE  &lt 3 JP_HANZEN                &kp BACKSPACE  &kp ENTER                                        &mkp MB2
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp EXCLAMATION   &kp JP_AT         &kp HASH      &kp DOLLAR     &kp PERCENT                                     &kp JP_CARET   &kp JP_AMPERSAND  &kp JP_ASTERISK  &kp JP_LPAREN    &kp JP_RPAREN
&kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3  &kp NUMBER_4   &kp NUMBER_5  &trans         &kp JP_UNDERSCORE  &kp NUMBER_6   &kp NUMBER_7      &kp NUMBER_8     &kp NUMBER_9     &kp NUMBER_0
&kp LEFT_SHIFT    &kp JP_BACKQUOTE  &kp JP_QUOTE  &kp JP_DQUOTE  &kp JP_EQUAL  &kp JP_PLUS    &kp DELETE         &kp SEMICOLON  &kp JP_COLON      &kp JP_LBRACKET  &kp JP_RBRACKET  &kp SLASH
&kp LEFT_CONTROL  &kp LEFT_WIN      &kp LEFT_ALT  &kp TAB        &kp SPACE     &kp GRAVE                         &kp BACKSPACE  &kp ENTER                                                          &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        layer_2 {
            bindings = <
&kp F1            &kp F2        &kp F3        &kp F4     &kp F5                                      &kp LC(HOME)        &kp HOME        &kp UP_ARROW  &kp END    &kp LC(END)
&kp F6            &kp F7        &kp F8        &kp F9     &kp F10    &trans                &kp LC(Y)  &kp LC(LEFT_ARROW)  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp LC(RIGHT)
&kp LEFT_SHIFT    &kp LC(E)     &kp LC(H)     &kp LC(F)  &kp F11    &kp F12               &kp DEL    &kp LC(Z)           &kp LC(X)       &kp LC(C)     &kp LC(V)  &kp LEFT_WIN
&kp LEFT_CONTROL  &kp LEFT_WIN  &kp LEFT_ALT  &kp TAB    &kp SPACE  &lt 6 INT_MUHENKAN               &kp BACKSPACE       &kp ENTER                                               &kp ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        layer_3 {
            bindings = <
&kp JP_HANZEN  &trans  &trans  &trans            &trans                                      &kp ASTERISK   &kp N7        &kp N8        &kp N9        &kp PLUS
&kp TAB        &trans  &trans  &trans            &trans       &kp C_MUTE            &trans   &kp PERIOD     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp MINUS
&trans         &trans  &trans  &trans            &trans       &trans                &kp DEL  &kp N0         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH
&mt LCTL ESC   &trans  &trans  &lt 6 INT_HENKAN  &lt 4 SPACE  &lt 5 INT_MUHENKAN             &kp BACKSPACE  &kp KP_ENTER                                         &moI
            >;

            sensor-bindings = <&inc_dec_kp LC(C_VOLUME_UP) LC(C_VOLUME_DOWN)>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp LC(V)  &kp LC(X)
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &kp LC(C)  &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans                                    &kp KP_ENTER
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        layer_5 {
            bindings = <
&bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                          &trans  &trans  &trans              &trans       &trans
&bt BT_DISC 0   &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &trans    &trans       &trans  &trans  &kp LC(LS(TAB))     &kp LC(TAB)  &mkp MB3
&bt BT_CLR      &trans         &trans         &trans         &trans         &trans    &bootloader  &trans  &trans  &kp LA(LEFT_ARROW)  &trans       &kp LA(RIGHT)
&bt BT_CLR_ALL  &trans         &trans         &trans         &trans         &trans                 &trans  &trans                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &mkp MB3
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &mkp MB1
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans                            &mkp MB2
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans                          &trans
            >;
        };
    };
};
